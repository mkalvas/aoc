import { solutionOne, solutionTwo } from './code';

const PART_ONE = 1283 * 1511 * 1619 * 1901; // 5966506063747

const INPUT = [
  'Tile 2311:',
  '..##.#..#.',
  '##..#.....',
  '#...##..#.',
  '####.#...#',
  '##.##.###.',
  '##...#.###',
  '.#.#.#..##',
  '..#....#..',
  '###...#.#.',
  '..###..###',
  '',
  'Tile 1951:',
  '#.##...##.',
  '#.####...#',
  '.....#..##',
  '#...######',
  '.##.#....#',
  '.###.#####',
  '###.##.##.',
  '.###....#.',
  '..#.#..#.#',
  '#...##.#..',
  '',
  'Tile 1171:',
  '####...##.',
  '#..##.#..#',
  '##.#..#.#.',
  '.###.####.',
  '..###.####',
  '.##....##.',
  '.#...####.',
  '#.##.####.',
  '####..#...',
  '.....##...',
  '',
  'Tile 1427:',
  '###.##.#..',
  '.#..#.##..',
  '.#.##.#..#',
  '#.#.#.##.#',
  '....#...##',
  '...##..##.',
  '...#.#####',
  '.#.####.#.',
  '..#..###.#',
  '..##.#..#.',
  '',
  'Tile 1489:',
  '##.#.#....',
  '..##...#..',
  '.##..##...',
  '..#...#...',
  '#####...#.',
  '#..#.#.#.#',
  '...#.#.#..',
  '##.#...##.',
  '..##.##.##',
  '###.##.#..',
  '',
  'Tile 2473:',
  '#....####.',
  '#..#.##...',
  '#.##..#...',
  '######.#.#',
  '.#...#.#.#',
  '.#########',
  '.###.#..#.',
  '########.#',
  '##...##.#.',
  '..###.#.#.',
  '',
  'Tile 2971:',
  '..#.#....#',
  '#...###...',
  '#.#.###...',
  '##.##..#..',
  '.#####..##',
  '.#..####.#',
  '#..#.#..#.',
  '..####.###',
  '..#.#.###.',
  '...#.#.#.#',
  '',
  'Tile 2729:',
  '...#.#.#.#',
  '####.#....',
  '..#.#.....',
  '....#..#.#',
  '.##..##.#.',
  '.#.####...',
  '####.#.#..',
  '##.####...',
  '##..#.##..',
  '#.##...##.',
  '',
  'Tile 3079:',
  '#.#.#####.',
  '.#..######',
  '..#.......',
  '######....',
  '####.#..#.',
  '.#...#.##.',
  '#.#####.##',
  '..#.###...',
  '..#.......',
  '..#.###...',
];

const END_STATE_ONE = [
  // 1951        2311       3079
  '#...##.#.. ..###..### #.#.#####.',
  '..#.#..#.# ###...#.#. .#..######',
  '.###....#. ..#....#.. ..#.......',
  '###.##.##. .#.#.#..## ######....',
  '.###.##### ##...#.### ####.#..#.',
  '.##.#....# ##.##.###. .#...#.##.',
  '#...###### ####.#...# #.#####.##',
  '.....#..## #...##..#. ..#.###...',
  '#.####...# ##..#..... ..#.......',
  '#.##...##. ..##.#..#. ..#.###...',
  '',
  // 2729        1427       2473
  '#.##...##. ..##.#..#. ..#.###...',
  '##..#.##.. ..#..###.# ##.##....#',
  '##.####... .#.####.#. ..#.###..#',
  '####.#.#.. ...#.##### ###.#..###',
  '.#.####... ...##..##. .######.##',
  '.##..##.#. ....#...## #.#.#.#...',
  '....#..#.# #.#.#.##.# #.###.###.',
  '..#.#..... .#.##.#..# #.###.##..',
  '####.#.... .#..#.##.. .######...',
  '...#.#.#.# ###.##.#.. .##...####',
  '',
  // 2971        1489       1171
  '...#.#.#.# ###.##.#.. .##...####',
  '..#.#.###. ..##.##.## #..#.##..#',
  '..####.### ##.#...##. .#.#..#.##',
  '#..#.#..#. ...#.#.#.. .####.###.',
  '.#..####.# #..#.#.#.# ####.###..',
  '.#####..## #####...#. .##....##.',
  '##.##..#.. ..#...#... .####...#.',
  '#.#.###... .##..##... .####.##.#',
  '#...###... ..##...#.. ...#..####',
  '..#.#....# ##.#.#.... ...##.....',
];

// strip borders and spaces from each tile in END_STATE_ONE
const MID_STATE_TWO = [
  '.#.#..#.##...#.##..#####',
  '###....#.#....#..#......',
  '##.##.###.#.#..######...',
  '###.#####...#.#####.#..#',
  '##.#....#.##.####...#.##',
  '...########.#....#####.#',
  '....#..#...##..#.#.###..',
  '.####...#..#.....#......',
  '#..#.##..#..###.#.##....',
  '#.####..#.####.#.#.###..',
  '###.#.#...#.######.#..##',
  '#.####....##..########.#',
  '##..##.#...#...#.#.#.#..',
  '...#..#..#.#.##..###.###',
  '.#.#....#.##.#...###.##.',
  '###.#...#..#.##.######..',
  '.#.#.###.##.##.#..#.##..',
  '.####.###.#...###.#..#.#',
  '..#.#..#..#.#.#.####.###',
  '#..####...#.#.#.###.###.',
  '#####..#####...###....##',
  '#.##..#..#...#..####...#',
  '.#.###..##..##..####.##.',
  '...###...##...#...#..###',
];

const CORNER_MULTIPLES = 1951 * 3079 * 2971 * 1171; // 20899048083289

describe('puzzle one', () => {
  it('multiplies the corner piece IDs', () => {
    expect(solutionOne(INPUT)).toEqual(CORNER_MULTIPLES);
  });
});

describe('puzzle two', () => {
  it('counts how many rough waters that are not part of sea monsters', () => {
    process.env.TEST = true;
    expect(solutionTwo(END_STATE_ONE)).toEqual(273);
  });
});
