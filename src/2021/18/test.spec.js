import { solutionOne, solutionTwo, Snail, sum } from './code';

const INPUT = {
  mag: 4140,
  largest: 3993,
  sum: '[[[[6,6],[7,6]],[[7,7],[7,0]]],[[[7,7],[7,7]],[[7,8],[9,9]]]]',
  lines: [
    '[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]',
    '[[[5,[2,8]],4],[5,[[9,9],0]]]',
    '[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]',
    '[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]',
    '[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]',
    '[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]',
    '[[[[5,4],[7,7]],8],[[8,3],8]]',
    '[[9,3],[[9,9],[6,[4,9]]]]',
    '[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]',
    '[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]',
  ],
};

const MAGNITUDES = [
  ['[[1,2],[[3,4],5]]', 143],
  ['[[[[0,7],4],[[7,8],[6,0]]],[8,1]]', 1384],
  ['[[[[1,1],[2,2]],[3,3]],[4,4]]', 445],
  ['[[[[3,0],[5,3]],[4,4]],[5,5]]', 791],
  ['[[[[5,0],[7,4]],[5,5]],[6,6]]', 1137],
  ['[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]', 3488],
];

const SPLITS = [
  ['[[[[0,7],4],[15,[0,13]]],[1,1]]', '[[[[0,7],4],[[7,8],[0,13]]],[1,1]]'],
  [
    '[[[[0,7],4],[[7,8],[0,13]]],[1,1]]',
    '[[[[0,7],4],[[7,8],[0,[6,7]]]],[1,1]]',
  ],
];

const EXPLODES = [
  ['[[[[[9,8],1],2],3],4]', '[[[[0,9],2],3],4]'],
  ['[7,[6,[5,[4,[3,2]]]]]', '[7,[6,[5,[7,0]]]]'],
  ['[[6,[5,[4,[3,2]]]],1]', '[[6,[5,[7,0]]],3]'],
  [
    '[[3,[2,[1,[7,3]]]],[6,[5,[4,[3,2]]]]]',
    '[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]',
  ],
  ['[[3,[2,[8,0]]],[9,[5,[4,[3,2]]]]]', '[[3,[2,[8,0]]],[9,[5,[7,0]]]]'],
];

const SUMS = [
  [['[1,1]', '[2,2]', '[3,3]', '[4,4]'], '[[[[1,1],[2,2]],[3,3]],[4,4]]'],
  [
    ['[1,1]', '[2,2]', '[3,3]', '[4,4]', '[5,5]'],
    '[[[[3,0],[5,3]],[4,4]],[5,5]]',
  ],
  [
    ['[1,1]', '[2,2]', '[3,3]', '[4,4]', '[5,5]', '[6,6]'],
    '[[[[5,0],[7,4]],[5,5]],[6,6]]',
  ],
  [
    [
      '[[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]]',
      '[7,[[[3,7],[4,3]],[[6,3],[8,8]]]]',
    ],
    '[[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]]',
  ],
  [
    [
      '[[[[4,0],[5,4]],[[7,7],[6,0]]],[[8,[7,7]],[[7,9],[5,0]]]]',
      '[[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]]',
    ],
    '[[[[6,7],[6,7]],[[7,7],[0,7]]],[[[8,7],[7,7]],[[8,8],[8,0]]]]',
  ],
  [
    [
      '[[[[6,7],[6,7]],[[7,7],[0,7]]],[[[8,7],[7,7]],[[8,8],[8,0]]]]',
      '[[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]]',
    ],
    '[[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]]',
  ],
  [
    [
      '[[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]]',
      '[7,[5,[[3,8],[1,4]]]]',
    ],
    '[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[[9,9],[9,0]]]]',
  ],
  [
    [
      '[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[[9,9],[9,0]]]]',
      '[[2,[2,2]],[8,[8,1]]]',
    ],
    '[[[[6,6],[6,6]],[[6,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]]',
  ],
  [
    ['[[[[6,6],[6,6]],[[6,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]]', '[2,9]'],
    '[[[[6,6],[7,7]],[[0,7],[7,7]]],[[[5,5],[5,6]],9]]',
  ],
  [
    [
      '[[[[6,6],[7,7]],[[0,7],[7,7]]],[[[5,5],[5,6]],9]]',
      '[1,[[[9,3],9],[[9,0],[0,7]]]]',
    ],
    '[[[[7,8],[6,7]],[[6,8],[0,8]]],[[[7,7],[5,0]],[[5,5],[5,6]]]]',
  ],
  [
    [
      '[[[[7,8],[6,7]],[[6,8],[0,8]]],[[[7,7],[5,0]],[[5,5],[5,6]]]]',
      '[[[5,[7,4]],7],1]',
    ],
    '[[[[7,7],[7,7]],[[8,7],[8,7]]],[[[7,0],[7,7]],9]]',
  ],
  [
    [
      '[[[[7,7],[7,7]],[[8,7],[8,7]]],[[[7,0],[7,7]],9]]',
      '[[[[4,2],2],6],[8,7]]',
    ],
    '[[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]',
  ],
];

const REDUCE = [
  [
    '[[[[[4,3],4],4],[7,[[8,4],9]]],[1,1]]',
    '[[[[0,7],4],[[7,8],[6,0]]],[8,1]]',
  ],
];

const MEGA_OUT = `Reducing:[[[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[0,[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,0],[[14,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[0,[14,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,0]],[[[15,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,15]],[[0,[15,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,15]],[[15,0],[[15,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,15]],[[15,15],[0,[15,7]]]],[7,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,15]],[[15,15],[15,0]]],[14,[5,[[3,8],[1,4]]]]]
exploded:[[[[7,14],[14,15]],[[15,15],[15,0]]],[14,[8,[0,[9,4]]]]]
exploded:[[[[7,14],[14,15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[7,[7,7]],[14,15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[14,0],[21,15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[[7,7],0],[21,15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[21,15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[[10,11],15]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,17],[0,26]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,[8,9]],[0,26]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[8,0],[9,26]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[8,0],[9,[13,13]]],[[15,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[8,0],[22,0]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[8,0],[[11,11],0]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[8,11],[0,11]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[8,[5,6]],[0,11]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[13,0],[6,11]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[[6,7],0],[6,11]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[6,11]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[6,[5,6]]],[[28,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[11,0]],[[34,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[[5,6],0]],[[34,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,12],[0,6]],[[34,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,[6,6]],[0,6]],[[34,15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,0],[6,6]],[[34,15],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,0],[6,6]],[[[17,17],15],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,0],[6,23]],[[0,32],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,0],[6,[11,12]]],[[0,32],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,0],[17,0]],[[12,32],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,0],[[8,9],0]],[[12,32],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[0,9]],[[12,32],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[0,9]],[[[6,6],32],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[0,15]],[[0,38],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[0,[7,8]]],[[0,38],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[7,0]],[[8,38],[15,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[7,0]],[[8,[19,19]],[15,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[7,0]],[[27,0],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[7,0]],[[[13,14],0],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[7,13]],[[0,14],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[7,[6,7]]],[[0,14],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,8],[13,0]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,8],[[6,7],0]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[6,14],[0,7]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[6,[7,7]],[0,7]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[13,0],[7,7]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[[6,7],0],[7,7]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[7,7]],[[7,14],[34,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[7,7]],[[7,[7,7]],[34,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[7,7]],[[14,0],[41,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[7,7]],[[[7,7],0],[41,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[7,14]],[[0,7],[41,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[7,[7,7]]],[[0,7],[41,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,7],[14,0]],[[7,7],[41,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,7],[[7,7],0]],[[7,7],[41,0]]],[14,[8,[9,0]]]]
exploded:[[[[0,14],[0,7]],[[7,7],[41,0]]],[14,[8,[9,0]]]]
splitted:[[[[0,[7,7]],[0,7]],[[7,7],[41,0]]],[14,[8,[9,0]]]]
exploded:[[[[7,0],[7,7]],[[7,7],[41,0]]],[14,[8,[9,0]]]]
splitted:[[[[7,0],[7,7]],[[7,7],[[20,21],0]]],[14,[8,[9,0]]]]
exploded:[[[[7,0],[7,7]],[[7,27],[0,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,0],[7,7]],[[7,[13,14]],[0,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,0],[7,7]],[[20,0],[14,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,0],[7,7]],[[[10,10],0],[14,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,0],[7,17]],[[0,10],[14,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,0],[7,[8,9]]],[[0,10],[14,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,0],[15,0]],[[9,10],[14,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,0],[[7,8],0]],[[9,10],[14,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[0,8]],[[9,10],[14,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[0,8]],[[9,[5,5]],[14,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[0,8]],[[14,0],[19,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[0,8]],[[[7,7],0],[19,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[0,15]],[[0,7],[19,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[0,[7,8]]],[[0,7],[19,21]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[7,0]],[[8,7],[19,21]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[7,0]],[[8,7],[[9,10],21]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[7,0]],[[8,16],[0,31]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[7,0]],[[8,[8,8]],[0,31]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[7,0]],[[16,0],[8,31]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[7,0]],[[[8,8],0],[8,31]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[0,8],[8,31]]],[14,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[0,8],[8,[15,16]]]],[14,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[0,8],[23,0]]],[30,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[0,8],[[11,12],0]]],[30,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[0,19],[0,12]]],[30,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[0,[9,10]],[0,12]]],[30,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,0],[10,12]]],[30,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,0],[[5,5],12]]],[30,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[0,17]]],[30,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[0,[8,9]]]],[30,[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,0]]],[39,[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,0]]],[[19,20],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,0]]],[[[9,10],20],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,0]]],[[[9,[5,5]],20],[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,0]]],[[[14,0],25],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,0]]],[[[[7,7],0],25],[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[0,7],25],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[0,7],[12,13]],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[0,7],[[6,6],13]],[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[0,13],[0,19]],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[0,[6,7]],[0,19]],[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,0],[7,19]],[8,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,0],[7,[9,10]]],[8,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,0],[16,0]],[18,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,0],[[8,8],0]],[18,[9,0]]]]
exploded:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[18,[9,0]]]]
splitted:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[[9,9],[9,0]]]]
Result:[[[[7,7],[7,8]],[[9,5],[8,7]]],[[[6,8],[0,8]],[[9,9],[9,0]]]]`;

const MEGA_OUT_TWO = `Reducing:[[[[[6,6],[6,6]],[[6,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[0,[12,6]],[[6,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[12,0],[[12,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[12,12],[0,[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[12,12],[6,0]],[[[14,7],[8,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[12,12],[6,14]],[[0,[15,9]],[8,[8,1]]]],[2,9]]
exploded:[[[[12,12],[6,14]],[[15,0],[17,[8,1]]]],[2,9]]
exploded:[[[[12,12],[6,14]],[[15,0],[25,0]]],[3,9]]
splitted:[[[[[6,6],12],[6,14]],[[15,0],[25,0]]],[3,9]]
exploded:[[[[0,18],[6,14]],[[15,0],[25,0]]],[3,9]]
splitted:[[[[0,[9,9]],[6,14]],[[15,0],[25,0]]],[3,9]]
exploded:[[[[9,0],[15,14]],[[15,0],[25,0]]],[3,9]]
splitted:[[[[9,0],[[7,8],14]],[[15,0],[25,0]]],[3,9]]
exploded:[[[[9,7],[0,22]],[[15,0],[25,0]]],[3,9]]
splitted:[[[[9,7],[0,[11,11]]],[[15,0],[25,0]]],[3,9]]
exploded:[[[[9,7],[11,0]],[[26,0],[25,0]]],[3,9]]
splitted:[[[[9,7],[[5,6],0]],[[26,0],[25,0]]],[3,9]]
exploded:[[[[9,12],[0,6]],[[26,0],[25,0]]],[3,9]]
splitted:[[[[9,[6,6]],[0,6]],[[26,0],[25,0]]],[3,9]]
exploded:[[[[15,0],[6,6]],[[26,0],[25,0]]],[3,9]]
splitted:[[[[[7,8],0],[6,6]],[[26,0],[25,0]]],[3,9]]
exploded:[[[[0,8],[6,6]],[[26,0],[25,0]]],[3,9]]
splitted:[[[[0,8],[6,6]],[[[13,13],0],[25,0]]],[3,9]]
exploded:[[[[0,8],[6,19]],[[0,13],[25,0]]],[3,9]]
splitted:[[[[0,8],[6,[9,10]]],[[0,13],[25,0]]],[3,9]]
exploded:[[[[0,8],[15,0]],[[10,13],[25,0]]],[3,9]]
splitted:[[[[0,8],[[7,8],0]],[[10,13],[25,0]]],[3,9]]
exploded:[[[[0,15],[0,8]],[[10,13],[25,0]]],[3,9]]
splitted:[[[[0,[7,8]],[0,8]],[[10,13],[25,0]]],[3,9]]
exploded:[[[[7,0],[8,8]],[[10,13],[25,0]]],[3,9]]
splitted:[[[[7,0],[8,8]],[[[5,5],13],[25,0]]],[3,9]]
exploded:[[[[7,0],[8,13]],[[0,18],[25,0]]],[3,9]]
splitted:[[[[7,0],[8,[6,7]]],[[0,18],[25,0]]],[3,9]]
exploded:[[[[7,0],[14,0]],[[7,18],[25,0]]],[3,9]]
splitted:[[[[7,0],[[7,7],0]],[[7,18],[25,0]]],[3,9]]
exploded:[[[[7,7],[0,7]],[[7,18],[25,0]]],[3,9]]
splitted:[[[[7,7],[0,7]],[[7,[9,9]],[25,0]]],[3,9]]
exploded:[[[[7,7],[0,7]],[[16,0],[34,0]]],[3,9]]
splitted:[[[[7,7],[0,7]],[[[8,8],0],[34,0]]],[3,9]]
exploded:[[[[7,7],[0,15]],[[0,8],[34,0]]],[3,9]]
splitted:[[[[7,7],[0,[7,8]]],[[0,8],[34,0]]],[3,9]]
exploded:[[[[7,7],[7,0]],[[8,8],[34,0]]],[3,9]]
splitted:[[[[7,7],[7,0]],[[8,8],[[17,17],0]]],[3,9]]
exploded:[[[[7,7],[7,0]],[[8,25],[0,17]]],[3,9]]
splitted:[[[[7,7],[7,0]],[[8,[12,13]],[0,17]]],[3,9]]
exploded:[[[[7,7],[7,0]],[[20,0],[13,17]]],[3,9]]
splitted:[[[[7,7],[7,0]],[[[10,10],0],[13,17]]],[3,9]]
exploded:[[[[7,7],[7,10]],[[0,10],[13,17]]],[3,9]]
splitted:[[[[7,7],[7,[5,5]]],[[0,10],[13,17]]],[3,9]]
exploded:[[[[7,7],[12,0]],[[5,10],[13,17]]],[3,9]]
splitted:[[[[7,7],[[6,6],0]],[[5,10],[13,17]]],[3,9]]
exploded:[[[[7,13],[0,6]],[[5,10],[13,17]]],[3,9]]
splitted:[[[[7,[6,7]],[0,6]],[[5,10],[13,17]]],[3,9]]
exploded:[[[[13,0],[7,6]],[[5,10],[13,17]]],[3,9]]
splitted:[[[[[6,7],0],[7,6]],[[5,10],[13,17]]],[3,9]]
exploded:[[[[0,7],[7,6]],[[5,10],[13,17]]],[3,9]]
splitted:[[[[0,7],[7,6]],[[5,[5,5]],[13,17]]],[3,9]]
exploded:[[[[0,7],[7,6]],[[10,0],[18,17]]],[3,9]]
splitted:[[[[0,7],[7,6]],[[[5,5],0],[18,17]]],[3,9]]
exploded:[[[[0,7],[7,11]],[[0,5],[18,17]]],[3,9]]
splitted:[[[[0,7],[7,[5,6]]],[[0,5],[18,17]]],[3,9]]
exploded:[[[[0,7],[12,0]],[[6,5],[18,17]]],[3,9]]
splitted:[[[[0,7],[[6,6],0]],[[6,5],[18,17]]],[3,9]]
exploded:[[[[0,13],[0,6]],[[6,5],[18,17]]],[3,9]]
splitted:[[[[0,[6,7]],[0,6]],[[6,5],[18,17]]],[3,9]]
exploded:[[[[6,0],[7,6]],[[6,5],[18,17]]],[3,9]]
splitted:[[[[6,0],[7,6]],[[6,5],[[9,9],17]]],[3,9]]
exploded:[[[[6,0],[7,6]],[[6,14],[0,26]]],[3,9]]
splitted:[[[[6,0],[7,6]],[[6,[7,7]],[0,26]]],[3,9]]
exploded:[[[[6,0],[7,6]],[[13,0],[7,26]]],[3,9]]
splitted:[[[[6,0],[7,6]],[[[6,7],0],[7,26]]],[3,9]]
exploded:[[[[6,0],[7,12]],[[0,7],[7,26]]],[3,9]]
splitted:[[[[6,0],[7,[6,6]]],[[0,7],[7,26]]],[3,9]]
exploded:[[[[6,0],[13,0]],[[6,7],[7,26]]],[3,9]]
splitted:[[[[6,0],[[6,7],0]],[[6,7],[7,26]]],[3,9]]
exploded:[[[[6,6],[0,7]],[[6,7],[7,26]]],[3,9]]
splitted:[[[[6,6],[0,7]],[[6,7],[7,[13,13]]]],[3,9]]
exploded:[[[[6,6],[0,7]],[[6,7],[20,0]]],[16,9]]
splitted:[[[[6,6],[0,7]],[[6,7],[[10,10],0]]],[16,9]]
exploded:[[[[6,6],[0,7]],[[6,17],[0,10]]],[16,9]]
splitted:[[[[6,6],[0,7]],[[6,[8,9]],[0,10]]],[16,9]]
exploded:[[[[6,6],[0,7]],[[14,0],[9,10]]],[16,9]]
splitted:[[[[6,6],[0,7]],[[[7,7],0],[9,10]]],[16,9]]
exploded:[[[[6,6],[0,14]],[[0,7],[9,10]]],[16,9]]
splitted:[[[[6,6],[0,[7,7]]],[[0,7],[9,10]]],[16,9]]
exploded:[[[[6,6],[7,0]],[[7,7],[9,10]]],[16,9]]
splitted:[[[[6,6],[7,0]],[[7,7],[9,[5,5]]]],[16,9]]
exploded:[[[[6,6],[7,0]],[[7,7],[14,0]]],[21,9]]
splitted:[[[[6,6],[7,0]],[[7,7],[[7,7],0]]],[21,9]]
exploded:[[[[6,6],[7,0]],[[7,14],[0,7]]],[21,9]]
splitted:[[[[6,6],[7,0]],[[7,[7,7]],[0,7]]],[21,9]]
exploded:[[[[6,6],[7,0]],[[14,0],[7,7]]],[21,9]]
splitted:[[[[6,6],[7,0]],[[[7,7],0],[7,7]]],[21,9]]
exploded:[[[[6,6],[7,7]],[[0,7],[7,7]]],[21,9]]
splitted:[[[[6,6],[7,7]],[[0,7],[7,7]]],[[10,11],9]]
splitted:[[[[6,6],[7,7]],[[0,7],[7,7]]],[[[5,5],11],9]]
splitted:[[[[6,6],[7,7]],[[0,7],[7,7]]],[[[5,5],[5,6]],9]]
Result:[[[[6,6],[7,7]],[[0,7],[7,7]]],[[[5,5],[5,6]],9]]`;

describe('snail numbers', () => {
  it('parses', () => {
    for (const input of INPUT.lines) {
      expect(`${Snail.from(input)}`).toBe(input);
    }
  });

  it('calculates magnitudes', () => {
    for (const [n, m] of MAGNITUDES) {
      expect(Snail.from(n).mag()).toBe(m);
    }
  });

  it('splits', () => {
    for (const [i, o] of SPLITS) {
      const sn = Snail.from(i);
      sn.split();
      expect(`${sn}`).toBe(o);
    }
  });

  it('explodes', () => {
    for (const [i, o] of EXPLODES) {
      const sn = Snail.from(i);
      sn.explode();
      expect(`${sn}`).toBe(o);
    }
  });

  it('simplifies', () => {
    for (const [i, o] of REDUCE) {
      expect(`${Snail.from(i).simplify()}`).toBe(o);
    }
  });

  it('sums', () => {
    for (const [i, o] of SUMS) {
      expect(`${sum(i)}`).toBe(o);
    }
    expect(`${sum(INPUT.lines)}`).toBe(INPUT.sum);
  });

  xit('mega-tests', () => {
    const input =
      '[[[[[7,0],[7,7]],[[7,7],[7,8]]],[[[7,7],[8,8]],[[7,7],[8,7]]]],[7,[5,[[3,8],[1,4]]]]]';
    const input2 =
      '[[[[[6,6],[6,6]],[[6,0],[6,7]]],[[[7,7],[8,9]],[8,[8,1]]]],[2,9]]';
    expect(Snail.from(input).simplify()).toBe(MEGA_OUT);
    expect(Snail.from(input2).simplify()).toBe(MEGA_OUT_TWO);
  });
});

describe('puzzle one', () => {
  it('Produces the magnitude of the final sum', () => {
    expect(solutionOne(INPUT.lines)).toEqual(INPUT.mag);
  });
});

describe('puzzle two', () => {
  it('Produces the largest magnitude for any two sums in the list', () => {
    expect(solutionTwo(INPUT.lines)).toEqual(INPUT.largest);
  });
});
